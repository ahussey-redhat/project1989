apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app.kubernetes.io/instance: kubeinvaders
    app.kubernetes.io/name: kubeinvaders
    app: kubeinvaders
  name: kubeinvaders
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubeinvaders
      app.kubernetes.io/name: kubeinvaders
      app: kubeinvaders
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: kubeinvaders
        app.kubernetes.io/name: kubeinvaders
        app: kubeinvaders
    spec:
      containers:
      - env:
        - name: ENDPOINT
          value: kubeinvaders_endpoint_placeholder
        - name: INSECURE_ENDPOINT
          value: "true"
        - name: NAMESPACE
          value: target
        - name: ALIENPROXIMITY
          value: "10"
        - name: HITSLIMIT
          value: "1"
        - name: UPDATETIME
          value: "0.5"
        - name: LIGHTSPEED_ENDPOINT
          value: lightspeed_endpoint_placeholder
        image: quay.io/dlederer/project1989-kubeinvaders:latest
        imagePullPolicy: Always
        name: kubeinvaders
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: kubeinvaders
  labels:
    app: kubeinvaders
spec:
  selector:
    app: kubeinvaders
  type: ClusterIP
  ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080

